<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.lys.zhku.mapper.FilesMapper">
  <resultMap id="BaseResultMap" type="com.lys.zhku.model.Files">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    <id column="id" jdbcType="INTEGER" property="id" />
    <result column="parent_dir" jdbcType="VARCHAR" property="parentDir" />
    <result column="name" jdbcType="VARCHAR" property="name" />
    <result column="uuid_name" jdbcType="VARCHAR" property="uuidName" />
    <result column="position" jdbcType="VARCHAR" property="position" />
    <result column="size" jdbcType="BIGINT" property="size" />
    <result column="time" jdbcType="TIMESTAMP" property="time" />
    <result column="enable" jdbcType="BIT" property="enable" />
  </resultMap>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    delete from files
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="com.lys.zhku.model.Files">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    insert into files (id, parent_dir, name, 
      uuid_name, position, size, 
      time, enable)
    values (#{id,jdbcType=INTEGER}, #{parentDir,jdbcType=VARCHAR}, #{name,jdbcType=VARCHAR}, 
      #{uuidName,jdbcType=VARCHAR}, #{position,jdbcType=VARCHAR}, #{size,jdbcType=BIGINT}, 
      #{time,jdbcType=TIMESTAMP}, #{enable,jdbcType=BIT})
  </insert>
  <update id="updateByPrimaryKey" parameterType="com.lys.zhku.model.Files">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    update files
    set parent_dir = #{parentDir,jdbcType=VARCHAR},
      name = #{name,jdbcType=VARCHAR},
      uuid_name = #{uuidName,jdbcType=VARCHAR},
      position = #{position,jdbcType=VARCHAR},
      size = #{size,jdbcType=BIGINT},
      time = #{time,jdbcType=TIMESTAMP},
      enable = #{enable,jdbcType=BIT}
    where id = #{id,jdbcType=INTEGER}
  </update>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    select id, parent_dir, name, uuid_name, position, size, time, enable
    from files
    where id = #{id,jdbcType=INTEGER}
  </select>
  <select id="selectAll" resultMap="BaseResultMap">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    select id, parent_dir, name, uuid_name, position, size, time, enable
    from files
  </select>
  
  <select id="selectCountByPagination" resultType="integer">
    select count(1) as total
    from files
    <where>
    	<if test="enable != null">
    		enable=#{enable,jdbcType=BOOLEAN}
    	</if>
    </where>
  </select>

  <select id="selectByPagination" resultMap="BaseResultMap">
    select id, parent_dir, name, uuid_name, position, size, time, enable
    from files
    <where>
    	<if test="enable != null">
    		enable=#{enable,jdbcType=BOOLEAN}
    	</if>
    </where>
    	limit #{index,jdbcType=INTEGER},#{rows,jdbcType=INTEGER}
  </select>

  <delete id="deleteByPrimaryKeys" parameterType="java.lang.Integer">
    delete from files
    <where>
    	<if test="ids==null or ids.length==0">
    		1=0
    	</if>
    	<if test="ids!=null and ids.length!=0">
    		id in
    		<foreach close=")" collection="ids" item="id" open="(" separator=",">
    			#{id,jdbcType=INTEGER}
    		</foreach>
    	</if>
    </where>    
  </delete> 

  <select id="selectByPrimaryKeys" resultMap="BaseResultMap">
    select id, parent_dir, name, uuid_name, position, size, time, enable
    from files
    <where>
    	<if test="ids==null or ids.length==0">
    		1=0
    	</if>
    	<if test="ids!=null and ids.length!=0">
    		id in
    		<foreach close=")" collection="ids" item="id" open="(" separator=",">
    			#{id,jdbcType=INTEGER}
    		</foreach>
    	</if>
    </where>    
  </select> 

  <select id="selectUuidNameAndPositionByPrimaryKeys" resultMap="BaseResultMap">
    select uuid_name, position
    from files
    <where>
    	<if test="ids==null or ids.length==0">
    		1=0
    	</if>
    	<if test="ids!=null and ids.length!=0">
    		id in
    		<foreach close=")" collection="ids" item="id" open="(" separator=",">
    			#{id,jdbcType=INTEGER}
    		</foreach>
    	</if>
    </where>    
  </select> 
  
  <insert id="insertFiles">
    insert into files (id, parent_dir, name, 
      uuid_name, position, size, 
      time, enable)
    values 
    <foreach collection="filesList" item="file" separator=",">
		(#{file.id,jdbcType=INTEGER}, #{file.parentDir,jdbcType=VARCHAR}, #{file.name,jdbcType=VARCHAR}, 
		#{file.uuidName,jdbcType=VARCHAR}, #{file.position,jdbcType=VARCHAR}, #{file.size,jdbcType=BIGINT}, 
		#{file.time,jdbcType=TIMESTAMP}, #{file.enable,jdbcType=BIT})
    </foreach>
  </insert> 
</mapper>